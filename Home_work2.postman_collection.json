{
	"info": {
		"_postman_id": "c16e41c1-152d-4dcf-90ca-2b3e463f6641",
		"name": "Home_work2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39788209"
	},
	"item": [
		{
			"name": "Task_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"This is the first responce from server!ss\");",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "Task_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();  //=ответ в json",
							"",
							"pm.test(\"Проверка структуры json\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"Olya\");",
							"    pm.expect(jsonData.age).to.eql(\"22\"); //ожидаем",
							"    pm.expect(jsonData.salary).to.eql(1000);",
							"});",
							"",
							"let jsonReq = request.data;",
							"",
							"pm.test(\"Проверка соответствия данных json\", function () {",
							"    pm.expect(jsonData.name).to.eql(jsonReq.name);",
							"    pm.expect(jsonData.age).to.eql(jsonReq.age);",
							"    pm.expect(jsonData.salary).to.eql(+jsonReq.salary); //+преобразование в нам",
							"});",
							"",
							"console.log(jsonData.family); //после точки поле, которое хотим найти",
							"",
							"pm.test(\"Проверка соответсвия зарплаты\", function () {",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(jsonData.salary * 4);  ",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Olya",
							"type": "text"
						},
						{
							"key": "age",
							"value": "22",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Task_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();  //=ответ в json",
							"",
							"let jsonReq = request.data; // записываем в переменную параметры нашего запроса ",
							"",
							"pm.test(\"Проверка структуры Json\", function () {",
							"    pm.expect(jsonData.name).to.eql(jsonReq.name);",
							"    pm.expect(jsonData.age).to.eql(jsonReq.age);",
							"    pm.expect(jsonData.salary).to.eql(+jsonReq.salary); //+преобразование в нам",
							"});",
							"",
							"console.log (jsonData.family);",
							"",
							"pm.test(\"Проверка параметров\", function () {",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\"); //property - параметр",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Olya&age=22&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Olya"
						},
						{
							"key": "age",
							"value": "22"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Task_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();  //=ответ в json",
							"",
							"let jsonReq = pm.request.url.query.toObject(); // вытаскиваем параметры из юрл и делаем из них объект ",
							"",
							"pm.test(\"Проверка структуры json\", function () {",
							"    pm.expect(jsonData.name).to.eql(jsonReq.name);",
							"    pm.expect(jsonData.age).to.eql(+jsonReq.age); //ожидаем",
							"});",
							"",
							"console.log(jsonReq.salary);",
							"console.log(jsonData.salary);",
							"",
							"console.log(jsonData.salary[0]);",
							"console.log(jsonData.salary[1]);",
							"console.log(jsonData.salary[2]);",
							"",
							"pm.test(\"Проверка 'элементов'\", function () {",
							"    pm.expect(jsonData.salary[0]).to.eql(+jsonReq.salary);",
							"    pm.expect(+jsonData.salary[1]).to.eql(+jsonReq.salary * 2);",
							"    pm.expect(+jsonData.salary[2]).to.eql(+jsonReq.salary * 3);",
							"});",
							"",
							"pm.environment.set(\"name\", jsonData.name); //pm.set - передать в окружение, name - название переменной, а дальше ее значение ",
							"pm.environment.set(\"age\", jsonData.age);",
							"pm.environment.set(\"salary\", jsonData.salary[0]);",
							"",
							"for (i = 0; i < 3; i++) {",
							"  // Запускается 5 раз, с шагом от 0 до 4.",
							"  console.log(\"цикл: \" + jsonData.salary[i]);",
							"}",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Olya&age=22&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Olya"
						},
						{
							"key": "age",
							"value": "22"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Task_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();  //=ответ в json",
							"",
							"let jsonReq = request.data;",
							"",
							"pm.test(\"Проверка параметров\", function () {",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\"); ",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\"); ",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\"); ",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\"); ",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\"); ",
							"    pm.expect(jsonData).to.have.property(\"person\"); //property - парамет",
							"    });",
							"",
							"pm.test(\"Проверка равенства Json\", function () {",
							"    pm.expect(jsonData.start_qa_salary).to.eql(+jsonReq.salary);",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(+jsonReq.salary * 2);",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(+jsonReq.salary * 2.7);",
							"    pm.expect(jsonData[\"qa_salary_after_1.5_year\"]).to.eql(+jsonReq.salary * 3.3); ",
							"    pm.expect(jsonData[\"qa_salary_after_3.5_years\"]).to.eql(+jsonReq.salary * 3.8); ",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(+jsonReq.salary); ",
							"    pm.expect(jsonData.person.u_age).to.eql(+jsonReq.age); ",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(+jsonReq.salary * 4.2);  //+преобразование в нам",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"",
					""
				]
			}
		}
	]
}